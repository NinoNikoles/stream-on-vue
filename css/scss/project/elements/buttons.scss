
@mixin animate($animation,$duration,$method,$times, $delay: 0s){
    animation: {
        name: $animation;
        duration: $duration;
        timing-function: $method;
        iteration-count: $times;
        delay: $delay;
    }
}

@mixin keyframes($name){
    @keyframes #{$name}{
        @content;
    }
}

a.btn, .btn, button.btn:not(.acf-button):not(.add_media), .button:not(.acf-button):not(.add_media), [type="submit"] {
    line: {
        height: 1 !important;
    }
    min-height: rem-calc(50) !important;

    @include MQ(xsmall) {
        min-width: unset !important;
    }

    &::before {
        font: {
            size: rem-calc(26) !important;
        }
        //@include transition(all $transition-default);
    }

    &.mylist-btn {
        &.hidden {
            display: none;
        }
    }

    &.loading {
        @include transitions(background-color $transition-default, color 0s ease);

        &::after {
            display: block !important;
            background: {
                color: inherit;
            }
            content: '\f110';
            color: inherit;
            font: {
                family: $icon-font;
                size: rem-calc(28);
            }
            line-height: rem-calc(46);
            margin: 0 !important;
            position: absolute !important;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%) rotate(0deg);
            opacity: 0;
            visibility: hidden;

            @include keyframes(spinner) {
                0% {
                    transform: translate(-50%, -50%) rotate(0deg);
                }
                100% {
                    transform: translate(-50%, -50%) rotate(360deg);
                }
            };
        }

        &.is-loading {
            overflow: hidden;

            &::after {
                display: flex !important;
                justify-content: center;
                align-items: center;
                line-height: 1;
                aspect-ratio: 1 / 1;
                width: 100%;
                opacity: 1;
                visibility: visible;
                @include animate(spinner, 2s, linear, infinite);
            }
        }

        &.saved {
            overflow: hidden;

            &::after {
                display: flex !important;
                justify-content: center;
                align-items: center;
                content: $icon-save;
                height: 100%;
                width: 100%;
                opacity: 1;
                visibility: visible;
            }
        }

        &.liked {
            &::after {
                content: $icon-heart;
                opacity: 1;
                visibility: visible;
            }
        }
    }

    &.like-btn {
        background: {
            color: transparent !important;
        }
        border: {
            color: transparent !important;
        }
        color: var(--font-color) !important;
        min-height: unset !important;
        @include transitions(background-color $transition-default, color $transition-default);

        @include keyframes(bounce-in) {
            0% { transform: translate(-50%, -50%) scale(0.25); opacity: 0;}
            75% { transform: translate(-50%, -50%) scale(1.3); }
            100% { transform: translate(-50%, -50%) scale(1); opacity: 1;}
        }
        @include keyframes(bounce-out) {
            0% { transform: translate(-50%, -50%) scale(1); opacity: 1;}
            25% { transform: translate(-50%, -50%) scale(1.3);}
            100% { transform: translate(-50%, -50%) scale(0); opacity: 0;}
        }

        &::before {
            content: $icon-heart-empty;
            color: inherit;
            transform: translate(-50%, -50%) scale(1);
            opacity: 1;
            @include transitions(translate 0s ease-in-out 0.1s, opacity 0s ease-in-out 0.1s);
            @include animate(bounce-in, 0.15s, ease-in-out, 1, 0.1s);
        }

        &::after {
            display: block !important;
            background: {
                color: transparent;
            }
            content: $icon-heart;
            color: inherit;
            font: {
                family: $icon-font;
                size: rem-calc(26) !important;
            }
            margin: 0 !important;
            position: absolute !important;
            top: 50% !important;
            left: 50% !important;
            transform: translate(-50%, -50%) scale(0.25);
            opacity: 0;
            visibility: visible;
            @include animate(bounce-out, 0.15s, ease-in-out, 1);
        }

        &[data-status="1"] {
            &::before {
                transform: translate(-50%, -50%) scale(0);
                opacity: 0;
                @include animate(bounce-out, 0.15s, ease-in-out, 1);
            }

            &::after {
                transform: translate(-50%, -50%) scale(1);
                opacity: 1;
                @include transitions(translate 0s ease-in-out 0.1s, opacity 0s ease-in-out 0.1s);
                @include animate(bounce-in, 0.15s, ease-in-out, 1, 0.1s);
            }
        }

        &:hover {
            color: var(--grey) !important;
        }
    }
}

i {
    &.icon-spinner {
        &::after {
            display: block !important;
            background: {
                color: transparent;
            }
            content: '\f110';
            color: var(--white) !important;
            font: {
                family: $icon-font;
                size: rem-calc(40);
            }
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(0deg);

            @include keyframes(spinner) {
                0% {
                    transform: translate(-50%, -50%) rotate(0deg);
                }
                100% {
                    transform: translate(-50%, -50%) rotate(360deg);
                }
            };
            @include animate(spinner, 2s, linear, infinite);

        }
    }
}

.menu-button {
    margin: {
        right: rem-calc(-$grid-padding);
    }

    &.active-button {
        .bar {
            &-2 {
                width: 0;
                opacity: 1;
            }
        }
    }
}